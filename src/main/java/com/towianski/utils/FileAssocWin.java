/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.towianski.utils;

import com.towianski.models.FileAssoc;
import com.towianski.models.JfpConstants;
import java.nio.file.Path;
import java.nio.file.Paths;

/**
 *
 * @author stan
 */
public class FileAssocWin extends javax.swing.JDialog {

    static FileAssocWin fileAssocWin = null;
    static boolean okFlag = false;

    static String filename = "";
    static Path filepath = null;
    static FileAssoc fa = null;
    
    /**
     * Creates new form RenameFiles
     */
    public FileAssocWin( String title, String filename, FileAssoc fa ) {
        initComponents();
        this.setTitle(title);
        this.filename = filename;
        this.filepath = Paths.get(filename);
        this.fa = fa;
        if ( fa != null )
            {
            setAssocType( fa.getAssocType() );
            setMatchType( fa.getMatchType());
            setMatchPattern( fa.getMatchPattern());
            setEditClass( fa.getEditClass());
            setExec( fa.getExec() );
            setStop( fa.getStop() );
            }
        else
            {
            int at = filename.lastIndexOf( '.' );
            if ( regexMatchType.isSelected() )
                setMatchPattern( ".*" + filename.substring( at ) );
            else 
                setMatchPattern( "**" + filename.substring( at ) );
            }
        this.setLocationRelativeTo( null );
        this.setVisible(true);
    }

    public static boolean isOkFlag() {
        return okFlag;
    }

    public String getMatchType()
    {
        if ( globMatchType.isSelected() )
            return JfpConstants.MATCH_TYPE_GLOB;
        else if ( regexMatchType.isSelected() )
            return JfpConstants.MATCH_TYPE_REGEX;
        return "";
    }
    
    public void setMatchType( String ss )
    {
        if ( ss.toUpperCase().equals( JfpConstants.MATCH_TYPE_GLOB ) )
                globMatchType.setSelected( true );
        else if ( ss.toUpperCase().equals( JfpConstants.MATCH_TYPE_REGEX ) )
            regexMatchType.setSelected( true );
    }

    public String getMatchPattern()
    {
        return matchPattern.getText();
    }
    
    public void setMatchPattern( String ss )
    {
        matchPattern.setText(ss);
    }
    
    public String getExec()
    {
        return exec.getText();
    }

    public void setExec( String ss )
    {
        exec.setText( ss );
    }

    public String getStop() {
        return stop.getText();
    }

    public void setStop(String ss) {
        stop.setText( ss );
    }

    public String getAssocType()
    {
        if ( suffixRB.isSelected() )
            return JfpConstants.ASSOC_TYPE_SUFFIX;
        else if ( filenameRB.isSelected() )
            return JfpConstants.ASSOC_TYPE_FILENAME;
        else if ( oneFileRB.isSelected() )
            return JfpConstants.ASSOC_TYPE_EXACT_FILE;
        return "";
    }

    public void setAssocType( String ss )
    {
        if ( ss.toUpperCase().equals(JfpConstants.ASSOC_TYPE_SUFFIX ) )
                suffixRB.setSelected( true );
        else if ( ss.toUpperCase().equals( JfpConstants.ASSOC_TYPE_FILENAME ) )
            filenameRB.setSelected( true );
        else if ( ss.toUpperCase().equals(JfpConstants.ASSOC_TYPE_EXACT_FILE ) )
                oneFileRB.setSelected( true );
    }

    public String getEditClass()
    {
        return editClass.getText();
    }

    public void setEditClass( String ss )
    {
        editClass.setText( ss );
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        globMatchType = new javax.swing.JRadioButton();
        regexMatchType = new javax.swing.JRadioButton();
        matchPattern = new javax.swing.JTextField();
        exec = new javax.swing.JTextField();
        okBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        suffixRB = new javax.swing.JRadioButton();
        filenameRB = new javax.swing.JRadioButton();
        oneFileRB = new javax.swing.JRadioButton();
        editClass = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        stop = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(900, 300));
        setModal(true);
        setPreferredSize(new java.awt.Dimension(900, 300));
        setSize(new java.awt.Dimension(200, 60));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(globMatchType);
        globMatchType.setSelected(true);
        globMatchType.setText("glob");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 8, 0, 0);
        getContentPane().add(globMatchType, gridBagConstraints);

        buttonGroup1.add(regexMatchType);
        regexMatchType.setText("regex");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 26, 0, 0);
        getContentPane().add(regexMatchType, gridBagConstraints);

        matchPattern.setMinimumSize(new java.awt.Dimension(150, 25));
        matchPattern.setPreferredSize(new java.awt.Dimension(150, 25));
        matchPattern.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matchPatternActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 223;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 7, 0, 10);
        getContentPane().add(matchPattern, gridBagConstraints);

        exec.setMinimumSize(new java.awt.Dimension(150, 25));
        exec.setPreferredSize(new java.awt.Dimension(150, 25));
        exec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                execActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 223;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 7, 0, 10);
        getContentPane().add(exec, gridBagConstraints);

        okBtn.setText("Ok");
        okBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 28;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 7, 10);
        getContentPane().add(okBtn, gridBagConstraints);

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 7, 10);
        getContentPane().add(cancelBtn, gridBagConstraints);

        jLabel1.setText("Execute Command");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 22, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        buttonGroup2.add(suffixRB);
        suffixRB.setSelected(true);
        suffixRB.setText("suffix");
        suffixRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suffixRBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        getContentPane().add(suffixRB, gridBagConstraints);

        buttonGroup2.add(filenameRB);
        filenameRB.setText("filename");
        filenameRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filenameRBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        getContentPane().add(filenameRB, gridBagConstraints);

        buttonGroup2.add(oneFileRB);
        oneFileRB.setText("1 file");
        oneFileRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneFileRBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        getContentPane().add(oneFileRB, gridBagConstraints);

        editClass.setEditable(false);
        editClass.setMinimumSize(new java.awt.Dimension(300, 25));
        editClass.setPreferredSize(new java.awt.Dimension(300, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 7, 0, 10);
        getContentPane().add(editClass, gridBagConstraints);

        jLabel2.setText("Editor Class");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 15, 0, 5);
        getContentPane().add(jLabel2, gridBagConstraints);

        jTextPane1.setEditable(false);
        jTextPane1.setText("get replaced in commands:\n%f - full file path     %F - filename\n$JAVA   $JAVAW   $CLASSPATH   $JFP   $JFPHOMETMP");
        jTextPane1.setMinimumSize(new java.awt.Dimension(200, 75));
        jTextPane1.setPreferredSize(new java.awt.Dimension(200, 75));
        jScrollPane1.setViewportView(jTextPane1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 7, 10);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        stop.setMinimumSize(new java.awt.Dimension(150, 25));
        stop.setPreferredSize(new java.awt.Dimension(150, 25));
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 7, 0, 10);
        getContentPane().add(stop, gridBagConstraints);

        jLabel3.setText("Stop Command");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 22, 0, 0);
        getContentPane().add(jLabel3, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBtnActionPerformed
        okFlag = true;
        System.out.println( "file assoc win OK");
        this.setVisible( false );
    }//GEN-LAST:event_okBtnActionPerformed

    private void matchPatternActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matchPatternActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_matchPatternActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        okFlag = false;
        System.out.println( "file assoc win CANCEL");
        this.setVisible( false );
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void execActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_execActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_execActionPerformed

    private void suffixRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suffixRBActionPerformed
        int at = filename.lastIndexOf( '.' );
        if ( regexMatchType.isSelected() )
            setMatchPattern( ".*" + filename.substring( at ) );
        else 
            setMatchPattern( "**" + filename.substring( at ) );
    }//GEN-LAST:event_suffixRBActionPerformed

    private void filenameRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filenameRBActionPerformed
        if ( regexMatchType.isSelected() )
            // this is a pain! if \ I SHould make it \\   not for now
            setMatchPattern( ".*" + System.getProperty( "file.separator" ) + filepath.getFileName() );
        else 
            setMatchPattern( "**" + filepath.getFileName() );
    }//GEN-LAST:event_filenameRBActionPerformed

    private void oneFileRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneFileRBActionPerformed
        setMatchPattern( filename );
    }//GEN-LAST:event_oneFileRBActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stopActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FileAssocWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FileAssocWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FileAssocWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FileAssocWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                fileAssocWin = new FileAssocWin( "c:/whatever/you.com" );
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JTextField editClass;
    private javax.swing.JTextField exec;
    private javax.swing.JRadioButton filenameRB;
    private javax.swing.JRadioButton globMatchType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextField matchPattern;
    private javax.swing.JButton okBtn;
    private javax.swing.JRadioButton oneFileRB;
    private javax.swing.JRadioButton regexMatchType;
    private javax.swing.JTextField stop;
    private javax.swing.JRadioButton suffixRB;
    // End of variables declaration//GEN-END:variables
}
