/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.towianski.jfileprocessor;

import com.towianski.models.Constants;
import com.towianski.sshutils.JschSftpUtils;
import com.towianski.utils.MyLogger;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.KeyStroke;

/**
 *
 * @author Stan Towianski July 2015
 */
public class SftpReturnFileFrame extends javax.swing.JFrame {

//    private final static MyLogger logger = new MyLogger( Logger.getLogger( CopyFrame.class.getName() ) );
    private final static MyLogger logger = MyLogger.getLogger(SftpReturnFileFrame.class.getName() );

    JFileFinderWin jFileFinderWin = null;
    String locFile = null;
    String user = null;
    String password = null;
    String rhost = null;
    String rmtFile = null;
    
    /**
     * Creates new form CopyFrame
     */
    public SftpReturnFileFrame( JFileFinderWin jFileFinderWin, String locFile, String user, String password, String rhost, String rmtFile )
        {
        initComponents();
        
        this.jFileFinderWin = jFileFinderWin;
        this.locFile = locFile;
        this.user = user;
        this.password = password;
        this.rhost = rhost;
        this.rmtFile = rmtFile;
        
        this.filename.setText( rmtFile );
        this.toHost.setText( rhost );

        this.setLocationRelativeTo( getRootPane() );
        this.setLocation(0, 0);
        this.addEscapeListener( this );
        doCmdBtn.requestFocusInWindow();
        }

    public void addEscapeListener(final JFrame win) {
        ActionListener escListener = new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                //System.out.println( "previewImportWin formWindow dispose()" );
                win.dispatchEvent( new WindowEvent( win, WindowEvent.WINDOW_CLOSING )); 
                win.dispose();
            }
        };

        win.getRootPane().registerKeyboardAction(escListener,
                KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0),
                JComponent.WHEN_IN_FOCUSED_WINDOW);
    }    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        doCmdBtn = new javax.swing.JButton();
        filename = new javax.swing.JLabel();
        toLabel = new javax.swing.JLabel();
        toHost = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Paste");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        doCmdBtn.setText("Return File");
        doCmdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doCmdBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(doCmdBtn, gridBagConstraints);

        filename.setText("   ");
        filename.setMaximumSize(new java.awt.Dimension(99999, 99999));
        filename.setMinimumSize(new java.awt.Dimension(300, 26));
        filename.setPreferredSize(new java.awt.Dimension(300, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 4, 0, 0);
        getContentPane().add(filename, gridBagConstraints);

        toLabel.setText("To Host");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 5, 0);
        getContentPane().add(toLabel, gridBagConstraints);

        toHost.setMaximumSize(new java.awt.Dimension(150, 26));
        toHost.setMinimumSize(new java.awt.Dimension(150, 26));
        toHost.setPreferredSize(new java.awt.Dimension(150, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 5, 5);
        getContentPane().add(toHost, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void doCmdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doCmdBtnActionPerformed
        if ( jFileFinderWin.getRmtConnectBtn().equalsIgnoreCase( Constants.RMT_CONNECT_BTN_CONNECTED ) )
            {
            JschSftpUtils jschSftpUtils = new JschSftpUtils();
            jschSftpUtils.SftpPut( locFile, user, password, rhost, rmtFile );
            this.dispatchEvent( new WindowEvent( this, WindowEvent.WINDOW_CLOSING )); 
            this.dispose();
            }
    }//GEN-LAST:event_doCmdBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        MyLogger logger = MyLogger.getLogger( CopyFrame.class.getName() );

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new sftpReturnFileFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton doCmdBtn;
    private javax.swing.JLabel filename;
    private javax.swing.JLabel toHost;
    private javax.swing.JLabel toLabel;
    // End of variables declaration//GEN-END:variables
}
